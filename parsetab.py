
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BEGIN CHAR COMMA CTE_CH CTE_F CTE_I DIV DOUBLEEQUAL DP ELSE END EQUAL FLOAT GT GTE ID IF INPUT INT LCORCH LKEY LOOP LPAREN LT LTE MINUS MULT NE OR OUTPUT PLUS RCORCH RKEY RPAREN SEMICOLON THEN\n    programa : BEGIN vars programa1 END\n    \n    programa1 : bloque\n    | bloque programa1\n    \n    vars : tipo vars1 SEMICOLON\n    | tipo vars1 SEMICOLON vars\n    \n    vars1 : ID\n    | ID COMMA vars1\n    \n    tipo : INT\n    | FLOAT\n    | CHAR\n    \n    bloque : asignacion\n    | condicion\n    | lectura\n    | escritura\n    | loop\n    \n    asignacion : ID EQUAL expresion SEMICOLON\n    | ID EQUAL array SEMICOLON\n    expresion : exp\n    | exp relop exp\n    | exp relop exp AND expresion\n    | exp relop exp OR expresion\n    relop : GT\n    | LT\n    | GTE\n    | LTE\n    | DOUBLEEQUAL\n    | NE\n    \n    exp : termino\n        | termino exp1\n    \n    exp1 : PLUS exp\n        | MINUS exp\n    \n    termino : factor\n            | factor termino1\n    \n    termino1 : MULT termino\n             | DIV termino\n    \n    factor : LPAREN expresion RPAREN\n            | PLUS var_cte\n            | MINUS var_cte\n            | var_cte\n    \n    var_cte : ID\n            | CTE_I\n            | CTE_F\n            | CTE_CH\n    \n    condicion : IF LPAREN expresion RPAREN THEN bloque condicion1\n    \n    condicion1 : SEMICOLON\n                | ELSE bloque SEMICOLON\n    \n    lectura : INPUT LPAREN ID RPAREN SEMICOLON\n    \n    escritura : OUTPUT LPAREN exp RPAREN SEMICOLON\n    \n    array : LCORCH array1 RCORCH\n    \n    array1 : exp\n            | exp COMMA array1\n    \n    loop : LOOP LPAREN expresion RPAREN THEN bloque SEMICOLON\n    '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,22,],[0,-1,]),'INT':([2,29,],[5,5,]),'FLOAT':([2,29,],[6,6,]),'CHAR':([2,29,],[7,7,]),'ID':([3,4,5,6,7,9,10,11,12,13,14,24,25,26,27,28,29,30,35,38,39,41,49,51,52,53,54,55,56,57,58,59,63,64,66,67,77,83,84,85,86,87,88,94,95,96,97,99,],[15,21,-8,-9,-10,15,-11,-12,-13,-14,-15,31,31,46,31,31,-4,21,31,31,31,31,-5,-16,-17,31,-22,-23,-24,-25,-26,-27,31,31,31,31,31,15,-47,-48,15,31,31,-44,-45,15,-52,-46,]),'IF':([3,9,10,11,12,13,14,29,49,51,52,83,84,85,86,94,95,96,97,99,],[16,16,-11,-12,-13,-14,-15,-4,-5,-16,-17,16,-47,-48,16,-44,-45,16,-52,-46,]),'INPUT':([3,9,10,11,12,13,14,29,49,51,52,83,84,85,86,94,95,96,97,99,],[17,17,-11,-12,-13,-14,-15,-4,-5,-16,-17,17,-47,-48,17,-44,-45,17,-52,-46,]),'OUTPUT':([3,9,10,11,12,13,14,29,49,51,52,83,84,85,86,94,95,96,97,99,],[18,18,-11,-12,-13,-14,-15,-4,-5,-16,-17,18,-47,-48,18,-44,-45,18,-52,-46,]),'LOOP':([3,9,10,11,12,13,14,29,49,51,52,83,84,85,86,94,95,96,97,99,],[19,19,-11,-12,-13,-14,-15,-4,-5,-16,-17,19,-47,-48,19,-44,-45,19,-52,-46,]),'END':([8,9,10,11,12,13,14,23,51,52,84,85,94,95,97,99,],[22,-2,-11,-12,-13,-14,-15,-3,-16,-17,-47,-48,-44,-45,-52,-46,]),'SEMICOLON':([10,11,12,13,14,20,21,31,32,33,34,36,37,40,42,43,44,50,51,52,62,65,69,70,72,73,75,76,78,79,80,81,82,84,85,90,91,92,93,94,95,97,98,99,],[-11,-12,-13,-14,-15,29,-6,-40,51,52,-18,-28,-32,-39,-41,-42,-43,-7,-16,-17,-29,-33,-37,-38,84,85,-19,-49,-30,-31,-34,-35,-36,-47,-48,95,97,-20,-21,-44,-45,-52,99,-46,]),'ELSE':([10,11,12,13,14,51,52,84,85,90,94,95,97,99,],[-11,-12,-13,-14,-15,-16,-17,-47,-48,96,-44,-45,-52,-46,]),'EQUAL':([15,],[24,]),'LPAREN':([16,17,18,19,24,25,27,28,35,38,53,54,55,56,57,58,59,63,64,66,67,77,87,88,],[25,26,27,28,38,38,38,38,38,38,38,-22,-23,-24,-25,-26,-27,38,38,38,38,38,38,38,]),'COMMA':([21,31,36,37,40,42,43,44,61,62,65,69,70,78,79,80,81,82,],[30,-40,-28,-32,-39,-41,-42,-43,77,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'LCORCH':([24,],[35,]),'PLUS':([24,25,27,28,31,35,36,37,38,40,42,43,44,53,54,55,56,57,58,59,63,64,65,66,67,69,70,77,80,81,82,87,88,],[39,39,39,39,-40,39,63,-32,39,-39,-41,-42,-43,39,-22,-23,-24,-25,-26,-27,39,39,-33,39,39,-37,-38,39,-34,-35,-36,39,39,]),'MINUS':([24,25,27,28,31,35,36,37,38,40,42,43,44,53,54,55,56,57,58,59,63,64,65,66,67,69,70,77,80,81,82,87,88,],[41,41,41,41,-40,41,64,-32,41,-39,-41,-42,-43,41,-22,-23,-24,-25,-26,-27,41,41,-33,41,41,-37,-38,41,-34,-35,-36,41,41,]),'CTE_I':([24,25,27,28,35,38,39,41,53,54,55,56,57,58,59,63,64,66,67,77,87,88,],[42,42,42,42,42,42,42,42,42,-22,-23,-24,-25,-26,-27,42,42,42,42,42,42,42,]),'CTE_F':([24,25,27,28,35,38,39,41,53,54,55,56,57,58,59,63,64,66,67,77,87,88,],[43,43,43,43,43,43,43,43,43,-22,-23,-24,-25,-26,-27,43,43,43,43,43,43,43,]),'CTE_CH':([24,25,27,28,35,38,39,41,53,54,55,56,57,58,59,63,64,66,67,77,87,88,],[44,44,44,44,44,44,44,44,44,-22,-23,-24,-25,-26,-27,44,44,44,44,44,44,44,]),'MULT':([31,37,40,42,43,44,69,70,82,],[-40,66,-39,-41,-42,-43,-37,-38,-36,]),'DIV':([31,37,40,42,43,44,69,70,82,],[-40,67,-39,-41,-42,-43,-37,-38,-36,]),'GT':([31,34,36,37,40,42,43,44,62,65,69,70,78,79,80,81,82,],[-40,54,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'LT':([31,34,36,37,40,42,43,44,62,65,69,70,78,79,80,81,82,],[-40,55,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'GTE':([31,34,36,37,40,42,43,44,62,65,69,70,78,79,80,81,82,],[-40,56,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'LTE':([31,34,36,37,40,42,43,44,62,65,69,70,78,79,80,81,82,],[-40,57,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'DOUBLEEQUAL':([31,34,36,37,40,42,43,44,62,65,69,70,78,79,80,81,82,],[-40,58,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'NE':([31,34,36,37,40,42,43,44,62,65,69,70,78,79,80,81,82,],[-40,59,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,-30,-31,-34,-35,-36,]),'RPAREN':([31,34,36,37,40,42,43,44,45,46,47,48,62,65,68,69,70,75,78,79,80,81,82,92,93,],[-40,-18,-28,-32,-39,-41,-42,-43,71,72,73,74,-29,-33,82,-37,-38,-19,-30,-31,-34,-35,-36,-20,-21,]),'RCORCH':([31,36,37,40,42,43,44,60,61,62,65,69,70,78,79,80,81,82,89,],[-40,-28,-32,-39,-41,-42,-43,76,-50,-29,-33,-37,-38,-30,-31,-34,-35,-36,-51,]),'AND':([31,36,37,40,42,43,44,62,65,69,70,75,78,79,80,81,82,],[-40,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,87,-30,-31,-34,-35,-36,]),'OR':([31,36,37,40,42,43,44,62,65,69,70,75,78,79,80,81,82,],[-40,-28,-32,-39,-41,-42,-43,-29,-33,-37,-38,88,-30,-31,-34,-35,-36,]),'THEN':([71,74,],[83,86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([2,29,],[3,49,]),'tipo':([2,29,],[4,4,]),'programa1':([3,9,],[8,23,]),'bloque':([3,9,83,86,96,],[9,9,90,91,98,]),'asignacion':([3,9,83,86,96,],[10,10,10,10,10,]),'condicion':([3,9,83,86,96,],[11,11,11,11,11,]),'lectura':([3,9,83,86,96,],[12,12,12,12,12,]),'escritura':([3,9,83,86,96,],[13,13,13,13,13,]),'loop':([3,9,83,86,96,],[14,14,14,14,14,]),'vars1':([4,30,],[20,50,]),'expresion':([24,25,28,38,87,88,],[32,45,48,68,92,93,]),'array':([24,],[33,]),'exp':([24,25,27,28,35,38,53,63,64,77,87,88,],[34,34,47,34,61,34,75,78,79,61,34,34,]),'termino':([24,25,27,28,35,38,53,63,64,66,67,77,87,88,],[36,36,36,36,36,36,36,36,36,80,81,36,36,36,]),'factor':([24,25,27,28,35,38,53,63,64,66,67,77,87,88,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'var_cte':([24,25,27,28,35,38,39,41,53,63,64,66,67,77,87,88,],[40,40,40,40,40,40,69,70,40,40,40,40,40,40,40,40,]),'relop':([34,],[53,]),'array1':([35,77,],[60,89,]),'exp1':([36,],[62,]),'termino1':([37,],[65,]),'condicion1':([90,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> BEGIN vars programa1 END','programa',4,'p_programa','yacc.py',21),
  ('programa1 -> bloque','programa1',1,'p_programa1','yacc.py',26),
  ('programa1 -> bloque programa1','programa1',2,'p_programa1','yacc.py',27),
  ('vars -> tipo vars1 SEMICOLON','vars',3,'p_vars','yacc.py',32),
  ('vars -> tipo vars1 SEMICOLON vars','vars',4,'p_vars','yacc.py',33),
  ('vars1 -> ID','vars1',1,'p_vars1','yacc.py',38),
  ('vars1 -> ID COMMA vars1','vars1',3,'p_vars1','yacc.py',39),
  ('tipo -> INT','tipo',1,'p_tipo','yacc.py',45),
  ('tipo -> FLOAT','tipo',1,'p_tipo','yacc.py',46),
  ('tipo -> CHAR','tipo',1,'p_tipo','yacc.py',47),
  ('bloque -> asignacion','bloque',1,'p_bloque','yacc.py',53),
  ('bloque -> condicion','bloque',1,'p_bloque','yacc.py',54),
  ('bloque -> lectura','bloque',1,'p_bloque','yacc.py',55),
  ('bloque -> escritura','bloque',1,'p_bloque','yacc.py',56),
  ('bloque -> loop','bloque',1,'p_bloque','yacc.py',57),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','yacc.py',62),
  ('asignacion -> ID EQUAL array SEMICOLON','asignacion',4,'p_asignacion','yacc.py',63),
  ('expresion -> exp','expresion',1,'p_expresion','yacc.py',67),
  ('expresion -> exp relop exp','expresion',3,'p_expresion','yacc.py',68),
  ('expresion -> exp relop exp AND expresion','expresion',5,'p_expresion','yacc.py',69),
  ('expresion -> exp relop exp OR expresion','expresion',5,'p_expresion','yacc.py',70),
  ('relop -> GT','relop',1,'p_relop','yacc.py',74),
  ('relop -> LT','relop',1,'p_relop','yacc.py',75),
  ('relop -> GTE','relop',1,'p_relop','yacc.py',76),
  ('relop -> LTE','relop',1,'p_relop','yacc.py',77),
  ('relop -> DOUBLEEQUAL','relop',1,'p_relop','yacc.py',78),
  ('relop -> NE','relop',1,'p_relop','yacc.py',79),
  ('exp -> termino','exp',1,'p_exp','yacc.py',84),
  ('exp -> termino exp1','exp',2,'p_exp','yacc.py',85),
  ('exp1 -> PLUS exp','exp1',2,'p_exp1','yacc.py',90),
  ('exp1 -> MINUS exp','exp1',2,'p_exp1','yacc.py',91),
  ('termino -> factor','termino',1,'p_termino','yacc.py',96),
  ('termino -> factor termino1','termino',2,'p_termino','yacc.py',97),
  ('termino1 -> MULT termino','termino1',2,'p_termino1','yacc.py',102),
  ('termino1 -> DIV termino','termino1',2,'p_termino1','yacc.py',103),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','yacc.py',108),
  ('factor -> PLUS var_cte','factor',2,'p_factor','yacc.py',109),
  ('factor -> MINUS var_cte','factor',2,'p_factor','yacc.py',110),
  ('factor -> var_cte','factor',1,'p_factor','yacc.py',111),
  ('var_cte -> ID','var_cte',1,'p_var_cte','yacc.py',116),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','yacc.py',117),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','yacc.py',118),
  ('var_cte -> CTE_CH','var_cte',1,'p_var_cte','yacc.py',119),
  ('condicion -> IF LPAREN expresion RPAREN THEN bloque condicion1','condicion',7,'p_condicion','yacc.py',124),
  ('condicion1 -> SEMICOLON','condicion1',1,'p_condicion1','yacc.py',129),
  ('condicion1 -> ELSE bloque SEMICOLON','condicion1',3,'p_condicion1','yacc.py',130),
  ('lectura -> INPUT LPAREN ID RPAREN SEMICOLON','lectura',5,'p_lectura','yacc.py',135),
  ('escritura -> OUTPUT LPAREN exp RPAREN SEMICOLON','escritura',5,'p_escritura','yacc.py',140),
  ('array -> LCORCH array1 RCORCH','array',3,'p_array','yacc.py',145),
  ('array1 -> exp','array1',1,'p_array1','yacc.py',150),
  ('array1 -> exp COMMA array1','array1',3,'p_array1','yacc.py',151),
  ('loop -> LOOP LPAREN expresion RPAREN THEN bloque SEMICOLON','loop',7,'p_loop','yacc.py',156),
]
